@inject HttpClient Http

<div class= "">
    <div class= "my-3">
    <div id= "advanceSearchButton">
        <h6>
            <a class=" href-button" data-toggle= "collapse" href= "#advanceSearch" aria-expanded= "false" aria-controls= "advanceSearch" @onclick= "changeAriaExpandedStatus">
                Busqueda avanzada
                @if (!ariaExpandedStatus)
                {
                    <span class=" span-correction oi oi-caret-bottom oi-aling-rigth"></span>
                }
                else
                {
                    <span class= "span-correction oi oi-caret-top oi-aling-rigth"> </span>
                }
            </a>
        </h6>
    </div>
    <div id= "advanceSearch" class=" collapse">
        <div class= "card">
            <div class= "card-body">
                <form>
                    <div class="form-row">
                        <div class= "form-group col-4">
                            <label>
                                Buscar por Id
                            </label>
                            <input type= "text" class= "form-control" @bind="Id"/>
                        </div>
                        <div class= "form-group col-1">
                            @if (sDSF)
                            {
                                <label class= "text-center">
                                    Deshabilitar
                                </label>
                            }
                            else
                            {
                                <label class= "text-center">
                                    Habilitar
                                </label>
                            }
                            <input type= "checkbox" class= "form-control" @bind="sDSF" />
                        </div>
                        <div class="form-group col-3">
                            <label for="startDateSearch">
                                Buscar desde
                            </label>
                            <input type="date" class="form-control" @bind="startDateSearch"/>
                        </div>
                        <div class= "form-group col-1">
                            @if (eDSF)
                            {
                                <label class= "text-center">
                                    Deshabilitar
                                </label>
                            }
                            else
                            {
                                <label class= "text-center">
                                    Habilitar
                                </label>
                            }
                            <input type= "checkbox" class= "form-control" @bind="eDSF" />
                        </div>
                        <div class="form-group col-3">
                            <label for="endDateSearch">
                                Buscar hasta
                            </label>
                            <input type="date" class="form-control" @bind="endDateSearch" />
                        </div>
                    </div>
                    <div class= "form-row">
                        <div class=" form-group col-10">
                        </div>
                        <div class=" form-group col-1">
                            <button type= "button" class=" btn btn-success w-100 font-weight-bold" @onclick="loadBillsFromAdvanceSearch">
                                Buscar
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    </div>
    <div id= "table">
        
        <Table facturas=billsList />
        
    </div>
</div>

@code
{
    @*GUI code*@
    /// <value>Atributo ariaExpandedStatus</value>
    private bool ariaExpandedStatus= false;

    /// <summary>
    /// el metodo cambia el estado del atributo ariaExpandedStatus
    /// </summary>
    private void changeAriaExpandedStatus (MouseEventArgs e)
    {
        ariaExpandedStatus= !ariaExpandedStatus ? true : false;
    }

    @*Functionality code*@

    /// <value>Atributo Id</value>
    private string Id= "";
    /// <value>Atributo sDSF</value>
    private bool sDSF= true;
    /// <value>Atributo startDateSearch</value>
    private DateTime startDateSearch= DateTime.Today.AddDays (-7);
    /// <value>Atributo eDSF</value>
    private bool eDSF= true;
    /// <value>Atributo endDateSearch</value>
    private DateTime endDateSearch= DateTime.Today;
    /// <value>Get y Set del atributo billsList</value>
    public List <Factura> billsList {get; set;}

    /// <summary>
    /// El metodo hará una petición al controlador de Factura, esto para inicializar la variable billsList
    /// </summary>
    private async Task LoadBills ( )
    {
        // billsList= await Http.GetJsonAsync <List <Factura>> ("Factura");

        string sDS= startDateSearch.ToString ("s");
        string eDS= endDateSearch.ToString ("s");

        billsList= await Http.GetJsonAsync <List <Factura>> ($"Factura/{true:bool}/{sDS:DateTime}/{true:bool}/{eDS:DateTime}");
    }

    /// <summary>
    /// El metodo hará una petición al controlador de Factura con los distintos atributos, esto para cambiar el valor de la variable billsList
    /// </summary>
    private async Task loadBillsFromAdvanceSearch (MouseEventArgs e)
    {
        if (startDateSearch.CompareTo (endDateSearch) < 0)
        {
            string sDS= startDateSearch.ToString ("s");
            string eDS= endDateSearch.ToString("s");

            if (string.IsNullOrEmpty (Id))
            {
                if (!sDSF && !eDSF)
                {
                    Console.WriteLine (":-( X infinito");
                }
                billsList= await Http.GetJsonAsync <List <Factura>> ($"Factura/{sDSF:bool}/{sDS:DateTime}/{eDSF:bool}/{eDS:DateTime}");
            }
            else
            {
                billsList= await Http.GetJsonAsync <List <Factura>> ($"Factura/{Id:string}/{sDSF:bool}/{sDS:DateTime}/{eDSF:bool}/{eDS:DateTime}");
            }
        }
        else
        {
            Console.WriteLine (":-(");
        }
    }

    /// <summary>
    /// Sobreescritura del metodo OnInitializedAsync().
    /// El metodo llamará a LoadBills()
    /// </summary>
    protected override async Task OnInitializedAsync ( )
    {
        await LoadBills ( );
    }
}
