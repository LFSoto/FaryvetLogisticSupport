@page "/Vehiculo"
@inject HttpClient Http
@inject IJSRuntime JS

<div class= "main-container">
  <body onbeforeunload="DataTableRemove()">
      <div class="pricing-header px-1 py-3 pt-md-3 pb-md-4 mx-auto text-center">
          <h1 class="display-4 font-wight-bold font-color-gray">
              <strong>
                  Gestión de Vehículos
              </strong>
          </h1>
      </div>
      <div>
          <a class="btn btn-primary" href="AgregarVehiculo"> Agregar Vehiculo </a>
      </div>
      <br />

      @if (vehiculos == null)
      {
          <text> Cargando... </text>
      }
      else if (vehiculos.Length == 0)
      {
          <text> No hay vehiculos disponibles </text>
      }
      else
      {
          <table id="datatable" class="table table-striped table-bordered" style="width:100%">
              <thead>
                  <tr>
                      <td> Placa </td>
                      <td> Capacidad de Carga </td>
                      <td> Estado </td>
                      <td> CVO de Senasa </td>
                      <td> Fecha de Vencimiento CVO Senasa </td>
                      <td> Marca </td>
                      <td> Modelo </td>
                      <td> Año de Fabricación </td>
                      <td> Permiso de Salida del País </td>
                      <td> Fecha de Vencimiento Salida del País </td>
                      <td> Vehiculo de Reparto </td>
                      <td>&nbsp;</td>
                  </tr>
              </thead>
              <tbody>
                  @foreach (var vehiculo in vehiculos)
                  {
                      <tr>
                          <td> @vehiculo.placa </td>
                          <td> @vehiculo.capacidadCarga Kg </td>
                          <td> @vehiculo.estado </td>
                          <td> <input type="checkbox" disabled @bind="@vehiculo.CVOSenasa" /> </td>
                          <td>
                              @if (vehiculo.CVOSenasa)
                              {
                                  @vehiculo.fechaVencimientoCVOSenasa.ToString("dd/MM/yyyy")
                              }
                              else
                              {
                                  <text> N/A </text>
                              }
                          </td>
                          <td> @vehiculo.marca </td>
                          <td> @vehiculo.modelo </td>
                          <td> @vehiculo.annioFabricacion </td>
                          <td> <input type="checkbox" disabled @bind="@vehiculo.salidaPais" /> </td>
                          <td>
                              @if (vehiculo.salidaPais)
                              {
                                  @vehiculo.fechaVencimientoSalidaPais.ToString("dd/MM/yyyy")
                              }
                              else
                              {
                                  <text> N/A </text>
                              }
                          </td>
                          <td> <input type="checkbox" disabled @bind="@vehiculo.isReparto" /> </td>
                          <td>
                              <a class=" btn btn-success" href="ActualizarVehiculo/@vehiculo.placa">
                                  Actualizar
                              </a>
                              <button class="btn btn-danger" @onclick="(() => BorrarVehiculo(vehiculo.placa)) "> Borrar </button>
                          </td>
                      </tr>
                  }
              </tbody>
          </table>
      }
  </body>
</div>

@code {
    /// <value>Get y Set del atributo vehiculos</value>
    public Vehiculo[] vehiculos { get; set; }

    /// <summary>
    /// Sobreescritura del metodo OnInitializedAsync().
    /// El metodo llamará a cargarVehiculos() y creará el datatable
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        await cargarVehiculos();
        await JS.InvokeAsync<object>("DataTableAdd");
    }

    /// <summary>
    /// El metodo hará una petición al controlador de vehiculos, esto para inicializar la variable vehiculos
    /// </summary>
    async Task cargarVehiculos()
    {
        vehiculos = await Http.GetJsonAsync<Vehiculo[]>("Vehiculo");
    }

    /// <summary>
    /// El metodo hará una petición al controlador de vehiculos, esto para borrar un vehiculo.
    /// Volverá a cargar todos los vehiculos.
    /// </summary>
    async Task BorrarVehiculo(string placa)
    {
        await Http.DeleteAsync($"Vehiculo/{placa}");
        await cargarVehiculos();
    }
}
