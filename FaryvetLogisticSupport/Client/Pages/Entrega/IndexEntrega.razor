@page "/Entregas"
@inject HttpClient Http
@inject IJSRuntime JS

<body onbeforeunload="DataTableRemove()">
    <div class="pricing-header px-1 py-3 pt-md-3 pb-md-4 mx-auto text-center">
        <h1 class="display-4 font-wight-bold font-color-gray">
            <strong>
                Entregas
            </strong>
        </h1>
    </div>
    <div style="margin-left:10%">
        <a class="btn btn-primary" href="AgregarEntrega"> Agregar Entrega </a>
    </div>
    <br />

    @if (entregas == null)
    {
        <text> Cargando... </text>
    }
    else if (entregas.Count == 0)
    {
        <text> No hay entregas pendientes </text>
    }
    else
    {
        <div align="center">
            <table id="datatable" class="table table-striped table-bordered text-center" style="width:80%">
                <thead>
                    <tr>
                        <td>id</td>
                        <td>Conductor</td>
                        <td>Vehiculo</td>
                        <td>peso</td>
                        <td>costo</td>
                        <td>comentarios</td>
                        <td>fecha de Salida</td>
                        <td>&nbsp;</td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var entrega in entregas)
                    {
                        <tr>
                            <td>@entrega.id</td>
                            <td>@entrega.chofer @entrega.ConductorNavigation.nombre @entrega.ConductorNavigation.apellido1 @entrega.ConductorNavigation.apellido2</td>
                            <td>@entrega.vehiculo @entrega.VehiculoNavigation.marca @entrega.VehiculoNavigation.modelo</td>
                            <td>@entrega.peso Kg</td>
                            <td>@entrega.costo colones</td>
                            <td>@entrega.comentarios</td>
                            <td>@entrega.fechaSalida.ToString("dd-MM-yyyy")</td>
                            <td>
                                <a class=" btn btn-success" href="FinalizarEntrega/@entrega.id">
                                    Finalizar entrega
                                </a>
                                <button class="btn btn-danger" @onclick="(() => borrarEntrega(entrega.id)) "> Cancelar Entrega </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }

</body>
@code{
    /// <value>Lista de entregas</value>
    public List<Entrega> entregas { get; set; }
    /// <summary>
    /// Funcion que inicializa el componente y carga la tabla de entregas.
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        await cargarEntregas();
        await JS.InvokeAsync<object>("DataTableAdd");
    }
    /// <summary>
    /// Funcion que carga todas la entregas.
    /// </summary>
    async Task cargarEntregas()
    {
        entregas = await Http.GetJsonAsync<List<Entrega>>("Entrega");
    }
    /// <summary>
    /// Funcion que permite borrar una entrega segun su id desde la tabla.
    /// </summary>
    /// <param name="id">Id de la entrega.</param>
    async Task borrarEntrega(int id)
    {
        Entrega entrega = await Http.GetJsonAsync<Entrega>($"Entrega/{id}");
        entrega.estado = "Entrega Cancelada";
        await Http.PutJsonAsync("Entrega", entrega);

        List<Factura> facturas = await Http.GetJsonAsync<List<Factura>>($"Entregas/{id}");
        foreach(var factura in facturas)
        {
            factura.estado = "Por Despachar";
            factura.entrega = null;
            await Http.PutJsonAsync("Factura", factura);
        }

        Conductor conductor = await Http.GetJsonAsync<Conductor>($"Conductor/{entrega.chofer}");
        conductor.estado = "Disponible";
        await Http.PutJsonAsync("Conductor", conductor);

        Vehiculo vehiculo = await Http.GetJsonAsync<Vehiculo>($"Vehiculo/{entrega.vehiculo}");
        vehiculo.estado = "Disponible";
        await Http.PutJsonAsync("Vehiculo", vehiculo);
        await cargarEntregas();
    }
}