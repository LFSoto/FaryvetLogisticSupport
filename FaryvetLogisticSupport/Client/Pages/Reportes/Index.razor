@page "/Reportes"
@inject HttpClient Http
@inject IJSRuntime JS

<div class="main-container">
    <body onbeforeunload="DataTableRemove()">
        <div class="pricing-header px-1 py-3 pt-md-3 pb-md-4 mx-auto text-center">
            <h1 class="display-4 font-wight-bold font-color-gray">
                <strong>
                    Reportes
                </strong>
            </h1>
        </div>

        @*<BusquedaReporte fechaInicio="@fechaInicioB"
            fechaFin="@fechaFinB"
            metodo="@buscar" />*@

        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-sm-3">
                        <div class="col">
                            <p>Fecha de Inicio:</p>
                            <input type="date" @bind="@fechaInicioB" @bind:format="yyyy-MM-dd" />
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="col">
                            <p>Fecha de Fin:</p>
                            <input type="date" @bind="@fechaFinB" @bind:format="yyyy-MM-dd" />
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="col">
                            <button type="button" class="btn btn-primary" @onclick="(()=>buscar())">
                                Buscar
                            </button>
                        </div>
                    </div>
                    @if (reportes != null)
                    {
                        <div class="col-sm-3">
                            <div class="col">
                                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#general">
                                    Mostrar Reporte General
                                </button>

                                <!-- Modal -->
                                <div class="modal fade" id="general" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
                                    <div class="modal-dialog modal-lg" role="document">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="exampleModalLongTitle">Reporte</h5>
                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                            </div>
                                            <div class="modal-body">
                                                <div>
                                                    <p>Reporte General</p>
                                                </div>

                                                @if (reportes.Count != 0)
                                                {
                                                    <div class="row">
                                                        <div class="col-sm-6">
                                                            <p class="card-text">Fecha de Inicio del Reporte: @fechaInicio.ToString("dd-MM-yyyy") </p>
                                                            <p class="card-text">Cantidad de Entregas Realizadas: @reportes.Sum(x => x.cantidadEntregas)</p>
                                                            <p class="card-text">Costo Total Transportado: @reportes.Sum(x => x.costo) Colones </p>
                                                            <p class="card-text">Costo Promedio Transportado: @(@reportes.Sum(x => x.costo) / @reportes.Sum(x => x.cantidadEntregas)) Colones </p>
                                                            <p class="card-text">Promedio de Kilometros Recorridos en las Entregas: @(@reportes.Sum(x => x.kilometrajeRecorrido) / @reportes.Sum(x => x.cantidadEntregas)) Km </p>
                                                        </div>
                                                        <div class="col-sm-6">
                                                            <p class="card-text">Fecha de Fin del Reporte: @fechaFin.ToString("dd-MM-yyyy")</p>
                                                            <p class="card-text">Peso Total Transportado: @reportes.Sum(x => x.peso) KG</p>
                                                            <p class="card-text">Kilometros Recorridos en las Entregas: @reportes.Sum(x => x.kilometrajeRecorrido) Km</p>
                                                            <p class="card-text">Peso Promedio Transportado: @(@reportes.Sum(x => x.peso) / @reportes.Sum(x => x.cantidadEntregas)) Kg </p>
                                                            <p class="card-text">Cantidad de Choferes que Realizaron Entregas: @reportes.Count </p>
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="row">
                                                        <div class="col-sm-6">
                                                            <p class="card-text">Fecha de Inicio del Reporte: @fechaInicio.ToString("dd-MM-yyyy") </p>
                                                            <p class="card-text">Cantidad de Entregas Realizadas: 0</p>
                                                            <p class="card-text">Costo Total Transportado: 0 Colones </p>
                                                            <p class="card-text">Costo Promedio Transportado: 0 Colones </p>
                                                            <p class="card-text">Promedio de Kilometros Recorridos en las Entregas: 0 Km </p>
                                                        </div>
                                                        <div class="col-sm-6">
                                                            <p class="card-text">Fecha de Fin del Reporte: @fechaFin.ToString("dd-MM-yyyy")</p>
                                                            <p class="card-text">Peso Total Transportado: 0 KG</p>
                                                            <p class="card-text">Kilometros Recorridos en las Entregas: 0 Km</p>
                                                            <p class="card-text">Peso Promedio Transportado: 0 Kg </p>
                                                            <p class="card-text">Cantidad de Choferes que Realizaron Entregas: 0 </p>
                                                        </div>
                                                    </div>
                                                }

                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>

        <TablasReporte reportes="@reportes"
                       conductores="@conductores"
                       fechaInicio="@fechaInicio"
                       fechaFin="@fechaFin" />

    </body>
</div>

@code {
    public object datos { get; set; }
    public List<Reporte> reportes { get; set; }
    public List<Conductor> conductores { get; set; } = new List<Conductor>();
    public DateTime fechaInicio { get; set; } = DateTime.Now.AddHours(-6).AddDays(-7);
    public DateTime fechaFin { get; set; } = DateTime.Now.AddHours(-6);
    public DateTime fechaInicioB { get; set; } = DateTime.Now.AddHours(-6).AddDays(-7);
    public DateTime fechaFinB { get; set; } = DateTime.Now.AddHours(-6);

    protected override async Task OnInitializedAsync()
    {
        await cargarEntregas();
        await JS.InvokeAsync<object>("DataTableAdd");
    }

    async Task cargarEntregas()
    {
        string fecha1 = fechaInicio.ToString("s");
        string fecha2 = fechaFin.ToString("s");

        Console.WriteLine("OK");

        datos = await Http.GetJsonAsync<object>($"Reportes/{fecha1:Datetime}/{fecha2:Datetime}");

        Console.WriteLine("OK1");

        reportes = JsonSerializer.Deserialize<List<Reporte>>(datos.ToString());

        foreach (var reporte in reportes)
        {
            Conductor conductor = await Http.GetJsonAsync<Conductor>($"Conductor/{reporte.chofer}");
            conductores.Add(conductor);
        }
    }

    async Task buscar()
    {

        if (fechaFinB >= fechaInicioB)
        {
            await JS.InvokeAsync<object>("DataTableRemove");
            await JS.InvokeAsync<object>("borrarReporte");

            fechaInicio = fechaInicioB;
            fechaFin = fechaFinB;

            string fecha1 = fechaInicioB.ToString("s");
            string fecha2 = fechaFinB.ToString("s");

            Console.WriteLine(fecha1);
            Console.WriteLine(fecha2);

            datos = await Http.GetJsonAsync<object>($"Reportes/{fecha1:Datetime}/{fecha2:Datetime}");

            //datos = await Http.GetJsonAsync<object>($"Reportes/{"2020-03-06":Datetime}/{"2020-04-26":Datetime}");


            reportes = JsonSerializer.Deserialize<List<Reporte>>(datos.ToString());

            Console.WriteLine(reportes.Count);

            foreach (var reporte in reportes)
            {
                Conductor conductor = await Http.GetJsonAsync<Conductor>($"Conductor/{reporte.chofer}");
                conductores.Add(conductor);
            }

            Console.WriteLine(datos);

            await JS.InvokeAsync<object>("DataTableAdd");
        }
        else {
            await JS.InvokeVoidAsync("alert", "La Fecha de Fin debe ser mayor o igual a la Fecha de Inicio");
        }
    }
}
